# Default values for gateboard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: udhos/gateboard
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# redeploy:
#
# 'always': adds a random annotation to Deployment in
#           order to redeploy the pods whenever the chart is reapplied.
#
# 'reconfig': adds annotations with checksums of configurations in
#             order to redeploy the pods whenever configuration is changed.
#
# https://v3.helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
#
redeploy: always

podAnnotations:
  "sidecar.istio.io/inject": "true"
  "prometheus.io/scrape": "true"
  "prometheus.io/path": /metrics
  "prometheus.io/port": "3000"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# add custom labels to deployment pods
customLabels:
  app: gateboard

resources:
  requests:
    cpu: 300m
    memory: 100Mi
    ephemeral-storage: 200Mi
  limits:
    cpu: 2000m
    memory: 400Mi
    ephemeral-storage: 200Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  apiVersion: autoscaling/v2

nodeSelector: {}

tolerations: []

affinity: {}

service:
  type: ClusterIP
  port: 8080

podHealthCheck:
  port: 8888
  path: /health

#
# See: https://stackoverflow.com/questions/72816925/helm-templating-in-configmap-for-values-yaml
#
configMapProperties:
  AUTOMEMLIMIT_DEBUG: "true"
  #SECRET_ROLE_ARN: ""
  LOG_DRIVER: zap # anything other than "zap" enables gin default logger
  #DEBUG: true
  #QUEUE_URL: ""
  #SQS_ROLE_ARN: ""
  #SQS_CONSUME_BAD_MESSAGE: "false"
  #SQS_CONSUME_INVALID_TOKEN: "true"
  #TTL: "300"
  REPO_LIST: /etc/gateboard/repo.yaml
  #REPO_TIMEOUT: 15s
  #LISTEN_ADDR: ":8080"
  #HEALTH_ADDR: ":8888"
  #HEALTH_PATH: /health
  #METRICS_ADDR: "":3000"
  #METRICS_PATH: /metrics
  #METRICS_MASK_PATH: "true"
  #METRICS_NAMESPACE: ""
  #METRICS_BUCKETS_LATENCY_HTTP: "0.001, 0.0025, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5, 10"
  #METRICS_BUCKETS_LATENCY_REPO: "0.00025, 0.0005, 0.001, 0.0025, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5"
  #WRITE_RETRY: "3"
  #WRITE_RETRY_INTERVAL: 1s
  #WRITE_TOKEN: "false" # require write token in PUT payload
  #TOKENS: "" # preload write tokens from this file "tokens.yaml"
  #GROUP_CACHE: "false"
  #GROUP_CACHE_PORT: :5000
  #GROUP_CACHE_EXPIRE: 180s
  #GROUP_CACHE_SIZE_BYTES: "10000"
  #KUBEGROUP_DEBUG: "true"
  #KUBEGROUP_LISTER_INTERVAL: 20s
  #GIN_MODE: release
  OTEL_TRACES_SAMPLER: parentbased_traceidratio
  OTEL_TRACES_SAMPLER_ARG: "0.01"
  # pick one of OTEL_SERVICE_NAME or OTEL_RESOURCE_ATTRIBUTES
  #OTEL_SERVICE_NAME: mynamespace.gateboard
  #OTEL_RESOURCE_ATTRIBUTES: 'service.name=mynamespace.gateboard,key2=value2'
  #
  # General configuration: https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/
  # Exporter configuration: https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/
  #
  # Jaeger:
  OTELCONFIG_EXPORTER: jaeger
  OTEL_TRACES_EXPORTER: jaeger
  OTEL_PROPAGATORS: b3multi
  OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:14268
  #
  # OTLP gRPC:
  #OTELCONFIG_EXPORTER: grpc
  #OTEL_TRACES_EXPORTER: otlp
  #OTEL_PROPAGATORS: b3multi
  #OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:4317
  #
  # OTLP HTTP:
  #OTELCONFIG_EXPORTER: http
  #OTEL_TRACES_EXPORTER: otlp
  #OTEL_PROPAGATORS: b3multi
  #OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:4318

#
# In order to use MongoDB TLS:
# 1. uncomment in configMapProperties above: MONGO_TLS_CA_FILE: /etc/gateboard/mongo-tls-ca-bundle.pem
# 2. put the cabundle inline below
#
configDir:
  mongo-tls-ca-bundle.pem: |
    -----BEGIN CERTIFICATE-----
    -----END CERTIFICATE-----
  repo.yaml: |
    # Example repo.yaml
    # Edit this file to suit your use case.
    # Keep only the repositories you actually need.
    #
    # Available repo kinds:
    #
    # mem:      testing-only pseudo-storage
    # mongo:    MongoDB
    # redis:    redis
    # dynamodb: DynamoDB
    # s3:       S3
    #
    # Use env var REPO_LIST to set the filename: export REPO_LIST=repo.yaml

    - kind: mem
      name: mem1 # name is used for metrics
    - kind: mem
      name: mem2 # pick distinct names for multiple instances of the same kind

    - kind: mongo
      name: mongo1 # name is used for metrics
      mongo:
        uri: mongodb://localhost:27017/
        database: gateboard
        collection: gateboard
        username: ""
        #password: "aws-parameterstore:us-east-1:/mongo/cluster1/password" # see https://github.com/udhos/boilerplate
        #tls_ca_file: /etc/gateboard/mongo-tls-ca-bundle.pem
        min_pool: 1
        index_creation_disable: false
        index_creation_retry: 5
        index_creation_cooldown: 5s

    - kind: dynamodb
      name: dynamo1 # name is used for metrics
      dynamodb:
        table: gateboard
        region: us-east-1
        role_arn: ""
        manual_create: false # if false, gateboard will create the table automatically

    - kind: redis
      name: redis1 # name is used for metrics
      redis:
        addr: localhost:6379
        #password: "aws-parameterstore:us-east-1:/redis/cluster3/password" # see https://github.com/udhos/boilerplate
        key: gateboard
        #tls: true
        #tls_insecure_skip_verify: true
        client_name: auto # 'auto' means use hostname

    - kind: s3
      name: s3one # name is used for metrics
      s3:
        bucket_name: ""
        bucket_region: us-east-1
        prefix: gateboard
        role_arn: ""
        manual_create: false # if false, gateboard will create the bucket automatically
        #server_side_encryption: AES256
